f=open("Frequency.txt","r")
x=f.read()
x=x.split("\n")
f.close()
myDict={}
for i in x:
    i=i.split("\t")
    myDict.update({i[1]:int(i[0])})
f=open("enable1.txt","r")
x=f.read()
f.close()
x=x.split("\n")
cipher="HASDONENOFAVOURSINARGUING".lower()
#cipher="HASDONEHIMSELFNOFAVOURSINARGUINGTHEPRAGMATICLINEATTHECONSTANTINOPLECONFERENCEDISRAELICAUGHTTHEMOOD".lower()
#cipher="ELLIOTHASDONEHIMSELFNOFAVOURSINARGUINGTHEPRAGMATICLINEATTHECONSTANTINOPLECONFERENCEDISRAELICAUGHTTHEMOODWITHHISPAMPHLETANDTHEPEOPLEDONOTSEEMTOAGREETHATBULGARIANLIVESCOUNTFORLESSINTHECALCULUSOFINTERNATIONALAFFAIRSITHINKSALISBURYPLANSTOMOVEHIMONPERHAPSBACKTOVIENNAHEWASSUCCESSFULTHEREITISMOSTUNUSUALTOHAVEANNOYEDBOTHSALISBURYANDGLADSTONEBUTIHAVESOMESYMPATHYWITHHISVIEWSTHETERRIBLEEVENTSTHATHAVEPRECIPITATEDTHISCRISISCANNOTBEUNDONEANDTHEREAREOTHERCONSIDERATIONSRUSSIANAGGRESSIONMUSTSTILLBEIMPEDEDIFWEARETORETAINOURINFLUENCEINTHEREGIONMYAGENTSTELLMETHATTHERUSSIANEMPERORMETWITHTHEAUSTRIANSATBUDAPESTATTHESTARTOFTHEYEARTODISCUSSTHEIRINTENTIONSINTHEEVENTOFWARANDITISRUMOUREDTHATTHEYPLANTORESTRUCTURETHEBALKANSINANEFFORTTOCONTROLTHESLAVICMOVESFORAUNIFIEDSTATEITISMYOWNVIEWTHATTHESLAVSMAYBEAMOSTUSEFULALLYINBLOCKINGTHEEXPANSIONISTMOVEMENTINRUSSIAANDIHAVEADVISEDTHEGOVERNMENTTOINVITETHEAUSTRIANSTOJOINUSINMARCHTOSEEIFWECANEFFECTADIPLOMATICSOLUTIONTOUNTANGLETHISGORDIANKNOTPERHAPSWECANFINDSOMETHINGMOREATTRACTIVEFORTHEMTHATWILLWEAKENTHEIRDEPENDENCEONTSARALEXANDERIIIFWEFAILTHENIFEARTHATMOREDIRECTACTIONMAYNEEDTOBETAKENIHAVEINMYPOSSESSIONCOPIESOFCERTAINLETTERSTHATHAVEBEENCIRCULATINGINFRANZJOSEFSCOURTTHATITHINKMIGHTBESUFFICIENTLYEMBARRASSINGTOCONCENTRATEMINDSONTHEADVANTAGESOFWORKINGWITHUSINSTABILITYINTHEREGIONISCERTAINLYSOMETHINGTOBEFEAREDBUTPERHAPSWECANCONVINCETHEAUSTRIANSTHATSTABILITYWOULDBEWORSEIFITISSECUREDBYTHERUSSIANSIFWECANNOTTURNAUSTRIATOOURCAUSEITMIGHTBENECESSARYTOUNDERTAKEACAMPAIGNTOSTIRUPTHELOCALPOPULATIONSPERHAPSRUSSIAWOULDTHINKTWICEBEFOREGETTINGINVOLVEDIFTHEYWERENOTABLETOSECUREASTABLESETTLEMENTBYFORCEOFARMSALONETHELESSONSOFTHECRIMEAHAVENOTBEENFORGOTTENBYANYOFITSCOMBATANTSMODERNWARFAREISGROWINGINDUSTRIALINITSSCALEANDTHECOSTSOFCONFLICTAREPROHIBITIVEIAMCERTAINTHATTHESTORIESTOLDBYNIGHTINGALEOFTHEHORRIFICWOUNDSSUFFEREDTHEREHAVESOFTENEDTHEAPPETITEOFSOMEFOROPENCONFLICTANDPERHAPSTHATISRESPONSIBLEFORHERMAJESTYSSUPPORTOFTHESHADOWARCHIVEANDALLITSWORKSIMUSTNOTLETHERDOWNNORTHEEMPIRE".lower()
wordList=[]
indexList=[]
IndexOfWord=0

for i in x:
    while True:
        IndexOfWord=(cipher.find(i,IndexOfWord,len(cipher)))
        indexList.append(IndexOfWord)
        IndexOfWord+=1
        if IndexOfWord==0:
            indexList.pop()
            if len(indexList)>0:
                wordList.append([i,indexList])
                indexList=[]
            break

removeList=[]
for i in wordList:
    if i[0] in myDict:
        i.append(myDict[i[0]])
    else:
        removeList.append(i)

for i in removeList:
    wordList.remove(i)

def takeThird(elem):
    return elem[2]
    
wordList.sort(key=takeThird)
print(wordList)

for i in range(0,len(cipher)):
    if 

"""rangeList=[]
stopper=0
done=0
k=0
for i in range(0,len(wordList)):
    thisWord=wordList[i][0]
    for j in range(0,len(wordList[i][1])):
        thisIndex=wordList[i][1][j]
        for n in rangeList:
            if thisIndex in range(n[0],n[1]) or (thisIndex+len(thisWord)) in range(n[0],n[1]):
                stopper+=1
        if stopper==0:
            wordLen=len(thisWord)
            rangeList.append([thisIndex,thisIndex+wordLen])
            print(thisWord)
            cipher = cipher[:thisIndex+k] + cipher[thisIndex+k:thisIndex+len(thisWord)+k].replace(thisWord,thisWord+"X")+cipher[thisIndex+len(thisWord)+k:]
            k+=1
        stopper=0
    k=0
print("")
print(rangeList)
print(cipher)"""